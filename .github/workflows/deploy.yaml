name: Deploy

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  APPLICATION_ARTIFACT: application-${{ github.sha }}.zip
  APPLICATION_FUNCTION_NAME: application
  APPLICATION_WORKING_DIRECTORY: ./application
  DISBURSEMENTS_ARTIFACT: disbursements-${{ github.sha }}.zip
  DISBURSEMENTS_FUNCTION_NAME: disbursements
  DISBURSEMENTS_WORKING_DIRECTORY: ./disbursements

jobs:
  check_for_lambda_changes:
    outputs:
      application: ${{ steps.changes.outputs.application }}
      disbursements: ${{ steps.changes.outputs.disbursements }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            application:
              - 'application/**'
            disbursements:
              - 'disbursements/**'

  #################
  # BUILD LAMBDAS #
  #################
  BUILD-application:
    runs-on: ubuntu-latest
    needs: check_for_lambda_changes
    if: ${{ needs.check_for_lambda_changes.outputs.application == 'true' }}
    defaults:
      run:
        working-directory: ${{ env.APPLICATION_WORKING_DIRECTORY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Run npm install
        run: npm install
      - name: Zip files
        run: zip -r ${{ env.APPLICATION_ARTIFACT }} *
      - name: Upload zip to GitHub Actions
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APPLICATION_ARTIFACT }}
          path: ${{ env.APPLICATION_WORKING_DIRECTORY }}/${{ env.APPLICATION_ARTIFACT }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      - name: Upload to S3
        run: |
          aws s3 cp ${{ env.APPLICATION_ARTIFACT }} s3://${{ secrets.AWS_S3_BUCKET_ID_OREGON }}/application/
          aws s3 cp ${{ env.APPLICATION_ARTIFACT }} s3://${{ secrets.AWS_S3_BUCKET_ID_VIRGINIA }}/application/

  BUILD-disbursements:
    runs-on: ubuntu-latest
    needs: check_for_lambda_changes
    if: ${{ needs.check_for_lambda_changes.outputs.disbursements == 'true' }}
    defaults:
      run:
        working-directory: ${{ env.DISBURSEMENTS_WORKING_DIRECTORY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Run npm install
        run: npm install
      - name: Zip files
        run: zip -r ${{ env.DISBURSEMENTS_ARTIFACT }} *
      - name: Upload zip to GitHub Actions
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DISBURSEMENTS_ARTIFACT }}
          path: ${{ env.DISBURSEMENTS_WORKING_DIRECTORY }}/${{ env.DISBURSEMENTS_ARTIFACT }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      - name: Upload to S3
        run: |
          aws s3 cp ${{ env.DISBURSEMENTS_ARTIFACT }} s3://${{ secrets.AWS_S3_BUCKET_ID_OREGON }}/disbursements/
          aws s3 cp ${{ env.DISBURSEMENTS_ARTIFACT }} s3://${{ secrets.AWS_S3_BUCKET_ID_VIRGINIA }}/disbursements/

  #################
  # DEPLOY TO DEV #
  #################
  require-builds:
    runs-on: ubuntu-latest
    needs: [BUILD-application, BUILD-disbursements]
    if: ${{ always() }}
    environment: dev
    steps:
      - uses: actions/checkout@v3
  DEV-application:
    runs-on: ubuntu-latest
    needs: [BUILD-application, require-builds]
    # environment: dev
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APPLICATION_ARTIFACT }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      - name: Deploy to dev - Oregon
        run: aws lambda update-function-code --publish --function-name ${{ env.APPLICATION_FUNCTION_NAME }} --zip-file fileb://${{ env.APPLICATION_ARTIFACT }} --region us-west-2
      - name: Deploy to dev - Virginia
        run: aws lambda update-function-code --publish --function-name ${{ env.APPLICATION_FUNCTION_NAME }} --zip-file fileb://${{ env.APPLICATION_ARTIFACT }} --region us-east-1

  DEV-disbursements:
    runs-on: ubuntu-latest
    needs: [BUILD-disbursements, require-builds]
    # environment: dev
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.DISBURSEMENTS_ARTIFACT }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      - name: Deploy to dev - Oregon
        run: aws lambda update-function-code --publish --function-name ${{ env.DISBURSEMENTS_FUNCTION_NAME }} --zip-file fileb://${{ env.DISBURSEMENTS_ARTIFACT }} --region us-west-2
      - name: Deploy to dev - Virginia
        run: aws lambda update-function-code --publish --function-name ${{ env.DISBURSEMENTS_FUNCTION_NAME }} --zip-file fileb://${{ env.DISBURSEMENTS_ARTIFACT }} --region us-east-1

  ##################
  # DEPLOY TO TEST #
  ##################
  TEST-application:
    runs-on: ubuntu-latest
    needs: DEV-application
    environment: test
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APPLICATION_ARTIFACT }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      - name: Deploy to dev - Oregon
        run: aws lambda update-function-code --publish --function-name ${{ env.APPLICATION_FUNCTION_NAME }} --zip-file fileb://${{ env.APPLICATION_ARTIFACT }} --region us-west-2
      - name: Deploy to dev - Virginia
        run: aws lambda update-function-code --publish --function-name ${{ env.APPLICATION_FUNCTION_NAME }} --zip-file fileb://${{ env.APPLICATION_ARTIFACT }} --region us-east-1

  TEST-disbursements:
    runs-on: ubuntu-latest
    needs: DEV-disbursements
    environment: test
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.DISBURSEMENTS_ARTIFACT }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      - name: Deploy to dev - Oregon
        run: aws lambda update-function-code --publish --function-name ${{ env.DISBURSEMENTS_FUNCTION_NAME }} --zip-file fileb://${{ env.DISBURSEMENTS_ARTIFACT }} --region us-west-2
      - name: Deploy to dev - Virginia
        run: aws lambda update-function-code --publish --function-name ${{ env.DISBURSEMENTS_FUNCTION_NAME }} --zip-file fileb://${{ env.DISBURSEMENTS_ARTIFACT }} --region us-east-1

  ##################
  # DEPLOY TO PROD #
  ##################
  PROD-application:
    runs-on: ubuntu-latest
    needs: TEST-application
    environment: prod
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APPLICATION_ARTIFACT }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      - name: Deploy to dev - Oregon
        run: aws lambda update-function-code --publish --function-name ${{ env.APPLICATION_FUNCTION_NAME }} --zip-file fileb://${{ env.APPLICATION_ARTIFACT }} --region us-west-2
      - name: Deploy to dev - Virginia
        run: aws lambda update-function-code --publish --function-name ${{ env.APPLICATION_FUNCTION_NAME }} --zip-file fileb://${{ env.APPLICATION_ARTIFACT }} --region us-east-1

  PROD-disbursements:
    runs-on: ubuntu-latest
    needs: TEST-disbursements
    environment: prod
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.DISBURSEMENTS_ARTIFACT }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      - name: Deploy to dev - Oregon
        run: aws lambda update-function-code --publish --function-name ${{ env.DISBURSEMENTS_FUNCTION_NAME }} --zip-file fileb://${{ env.DISBURSEMENTS_ARTIFACT }} --region us-west-2
      - name: Deploy to dev - Virginia
        run: aws lambda update-function-code --publish --function-name ${{ env.DISBURSEMENTS_FUNCTION_NAME }} --zip-file fileb://${{ env.DISBURSEMENTS_ARTIFACT }} --region us-east-1
