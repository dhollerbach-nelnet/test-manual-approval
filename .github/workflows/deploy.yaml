name: Deploy

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  check_for_lambda_changes:
    outputs:
      application: ${{ steps.changes.outputs.application }}
      disbursements: ${{ steps.changes.outputs.disbursements }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            application:
              - 'application/**'
            disbursements:
              - 'disbursements/**'

  ################
  # DEPLOY TO S3 #
  ################
  build-application:
    outputs:
      artifact: application-${{ github.sha }}.zip
    runs-on: ubuntu-latest
    needs: check_for_lambda_changes
    if: ${{ needs.check_for_lambda_changes.outputs.application == 'true' }}
    defaults:
      run:
        working-directory: ./application
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Run npm install
        run: npm install
      - name: Zip files
        run: zip -r application-${{ github.sha }}.zip *
      - name: Upload zip to GitHub Actions
        uses: actions/upload-artifact@v3
        with:
          name: application-${{ github.sha }}.zip
          path: ./application/application-${{ github.sha }}.zip
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      #     aws-region: ${{ secrets.AWS_REGION }}
      # - name: Copy files to S3
      #   run: |
      #     aws s3 cp ${{ github.sha }}.zip s3://${{ secrets.AWS_S3_BUCKET_ID_OREGON }}/application/
      #     aws s3 cp ${{ github.sha }}.zip s3://${{ secrets.AWS_S3_BUCKET_ID_VIRGINIA }}/application/

  build-disbursements:
    outputs:
      artifact: disbursements-${{ github.sha }}.zip
    runs-on: ubuntu-latest
    needs: check_for_lambda_changes
    if: ${{ needs.check_for_lambda_changes.outputs.disbursements == 'true' }}
    defaults:
      run:
        working-directory: ./disbursements
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Run npm install
        run: npm install
      - name: Zip files
        run: zip -r disbursements-${{ github.sha }}.zip *
      - name: Upload zip to GitHub Actions
        uses: actions/upload-artifact@v3
        with:
          name: disbursements-${{ github.sha }}.zip
          path: ./disbursements/disbursements-${{ github.sha }}.zip
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      #     aws-region: ${{ secrets.AWS_REGION }}
      # - name: Copy files to S3
      #   run: |
      #     aws s3 cp ${{ github.sha }}.zip s3://${{ secrets.AWS_S3_BUCKET_ID_OREGON }}/disbursements/
      #     aws s3 cp ${{ github.sha }}.zip s3://${{ secrets.AWS_S3_BUCKET_ID_VIRGINIA }}/disbursements/

  #################
  # DEPLOY TO DEV #
  #################
  application-to-dev:
    runs-on: ubuntu-latest
    needs: build-application
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: application-${{ github.sha }}.zip
      - name: Deploy to dev
        run: aws lambda update-function-code --publish --function-name $FUNCTION --zip-file fileb://$ZIP
        env:
          FUNCTION: application
          ZIP: application-${{ github.sha }}.zip

  disbursements-to-dev:
    runs-on: ubuntu-latest
    needs: build-disbursements
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: disbursements-${{ github.sha }}.zip
      - name: Deploy to dev
        run: aws lambda update-function-code --publish --function-name $FUNCTION --zip-file fileb://$ZIP
        env:
          FUNCTION: disbursements
          ZIP: disbursements-${{ github.sha }}.zip

  # ##################
  # # DEPLOY TO TEST #
  # ##################
  # require-developer-approval:
  #   runs-on: ubuntu-latest
  #   needs: [application-to-dev, disbursements-to-dev]
  #   environment: test
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo 'Waiting for developer approval'

  # application-to-test:
  #   runs-on: ubuntu-latest
  #   needs: require-developer-approval
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo 'Deploying application to test'

  # disbursements-to-test:
  #   runs-on: ubuntu-latest
  #   needs: require-developer-approval
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo 'Deploying disbursements to test'

  # ##################
  # # DEPLOY TO PROD #
  # ##################
  # require-business-approval:
  #   runs-on: ubuntu-latest
  #   needs: [application-to-test, disbursements-to-test]
  #   environment: prod
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo 'Waiting for business approval'

  # application-to-prod:
  #   runs-on: ubuntu-latest
  #   needs: require-business-approval
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo 'Deploying application to prod'

  # disbursements-to-prod:
  #   runs-on: ubuntu-latest
  #   needs: require-business-approval
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo 'Deploying disbursements to prod'
