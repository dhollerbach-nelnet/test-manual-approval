name: Deploy

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  APPLICATION_ARTIFACT: application-${{ github.sha }}.zip
  APPLICATION_WORKING_DIRECTORY: ./application
  DISBURSEMENTS_ARTIFACT: disbursements-${{ github.sha }}.zip
  DISBURSEMENTS_WORKING_DIRECTORY: ./disbursements

jobs:
  check_for_lambda_changes:
    outputs:
      application: ${{ steps.changes.outputs.application }}
      disbursements: ${{ steps.changes.outputs.disbursements }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            application:
              - 'application/**'
            disbursements:
              - 'disbursements/**'

  ################
  # DEPLOY TO S3 #
  ################
  build-application:
    runs-on: ubuntu-latest
    needs: check_for_lambda_changes
    if: ${{ needs.check_for_lambda_changes.outputs.application == 'true' }}
    defaults:
      run:
        working-directory: ${{ env.APPLICATION_WORKING_DIRECTORY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Run npm install
        run: npm install
      - name: Zip files
        run: zip -r ${{ env.APPLICATION_ARTIFACT }} *
      - name: Upload zip to GitHub Actions
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APPLICATION_ARTIFACT }}
          path: ${{ env.APPLICATION_WORKING_DIRECTORY }}/${{ env.APPLICATION_ARTIFACT }}

  build-disbursements:
    runs-on: ubuntu-latest
    needs: check_for_lambda_changes
    if: ${{ needs.check_for_lambda_changes.outputs.disbursements == 'true' }}
    defaults:
      run:
        working-directory: ${{ env.DISBURSEMENTS_WORKING_DIRECTORY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Run npm install
        run: npm install
      - name: Zip files
        run: zip -r ${{ env.DISBURSEMENTS_ARTIFACT }} *
      - name: Upload zip to GitHub Actions
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DISBURSEMENTS_ARTIFACT }}
          path: ${{ env.DISBURSEMENTS_WORKING_DIRECTORY }}/${{ env.DISBURSEMENTS_ARTIFACT }}

  #################
  # DEPLOY TO DEV #
  #################
  require-builds:
    runs-on: ubuntu-latest
    needs: [build-application, build-disbursements]
    steps:
      - uses: actions/checkout@v3

  deploy-application-to-dev:
    runs-on: ubuntu-latest
    needs: require-builds
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APPLICATION_ARTIFACT }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy to dev - Oregon
        run: aws lambda update-function-code --publish --function-name $FUNCTION --zip-file fileb://$ZIP --region $REGION
        env:
          FUNCTION: application
          REGION: us-west-2
          ZIP: ${{ env.APPLICATION_ARTIFACT }}
      - name: Deploy to dev - Virginia
        run: aws lambda update-function-code --publish --function-name $FUNCTION --zip-file fileb://$ZIP --region $REGION
        env:
          FUNCTION: application
          REGION: us-east-1
          ZIP: ${{ env.APPLICATION_ARTIFACT }}

  deploy-disbursements-to-dev:
    runs-on: ubuntu-latest
    needs: require-builds
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.DISBURSEMENTS_ARTIFACT }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy to dev - Oregon
        run: aws lambda update-function-code --publish --function-name $FUNCTION --zip-file fileb://$ZIP --region $REGION
        env:
          FUNCTION: disbursements
          REGION: us-west-2
          ZIP: ${{ env.DISBURSEMENTS_ARTIFACT }}
      - name: Deploy to dev - Virginia
        run: aws lambda update-function-code --publish --function-name $FUNCTION --zip-file fileb://$ZIP --region $REGION
        env:
          FUNCTION: disbursements
          REGION: us-east-1
          ZIP: ${{ env.DISBURSEMENTS_ARTIFACT }}

  # ##################
  # # DEPLOY TO TEST #
  # ##################
  # require-developer-approval:
  #   runs-on: ubuntu-latest
  #   needs: [deploy-application-to-dev, deploy-disbursements-to-dev]
  #   environment: test
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo 'Waiting for developer approval'

  # deploy-application-to-test:
  #   runs-on: ubuntu-latest
  #   needs: require-developer-approval
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo 'Deploying application to test'

  # deploy-disbursements-to-test:
  #   runs-on: ubuntu-latest
  #   needs: require-developer-approval
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo 'Deploying disbursements to test'

  # ##################
  # # DEPLOY TO PROD #
  # ##################
  # require-business-approval:
  #   runs-on: ubuntu-latest
  #   needs: [deploy-application-to-test, deploy-disbursements-to-test]
  #   environment: prod
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo 'Waiting for business approval'

  # deploy-application-to-prod:
  #   runs-on: ubuntu-latest
  #   needs: require-business-approval
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo 'Deploying application to prod'

  # deploy-disbursements-to-prod:
  #   runs-on: ubuntu-latest
  #   needs: require-business-approval
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo 'Deploying disbursements to prod'
